Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.1/avr25/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/crttn45.o (exit)
/usr/lib/gcc/avr/4.8.1/avr25/libgcc.a(_clear_bss.o)
                              relay.o (__do_clear_bss)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/crttn45.o
LOAD relayboard.o
LOAD relay.o
LOAD relaytimer.o
LOAD spislave.o
LOAD water.o
LOAD cmd.o
START GROUP
LOAD /usr/lib/gcc/avr/4.8.1/avr25/libgcc.a
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/libm.a
LOAD /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x4e4
 *(.vectors)
 .vectors       0x0000000000000000       0x1e /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/crttn45.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x000000000000001e                . = ALIGN (0x2)
                0x000000000000001e                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000000000001e        0x0 linker stubs
 *(.trampolines*)
                0x000000000000001e                __trampolines_end = .
 *(.progmem*)
                0x000000000000001e                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000000000001e                __ctors_start = .
 *(.ctors)
                0x000000000000001e                __ctors_end = .
                0x000000000000001e                __dtors_start = .
 *(.dtors)
                0x000000000000001e                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000000000001e        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/crttn45.o
                0x000000000000001e                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000000000001e        0xc /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/crttn45.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000000000002a       0x10 /usr/lib/gcc/avr/4.8.1/avr25/libgcc.a(_clear_bss.o)
                0x000000000000002a                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000000000003a        0x4 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/crttn45.o
 *(.init9)
 *(.text)
 .text          0x000000000000003e        0x2 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/crttn45.o
                0x000000000000003e                __vector_1
                0x000000000000003e                __vector_12
                0x000000000000003e                __bad_interrupt
                0x000000000000003e                __vector_6
                0x000000000000003e                __vector_3
                0x000000000000003e                __vector_11
                0x000000000000003e                __vector_13
                0x000000000000003e                __vector_7
                0x000000000000003e                __vector_4
                0x000000000000003e                __vector_9
                0x000000000000003e                __vector_2
                0x000000000000003e                __vector_8
                0x000000000000003e                __vector_10
 .text          0x0000000000000040       0x46 relayboard.o
                0x0000000000000040                __vector_5
 .text          0x0000000000000086      0x1ca relay.o
                0x0000000000000086                relay_set_on
                0x0000000000000114                relay_set_off
                0x0000000000000138                relay_get_status
                0x000000000000013e                relay_init
                0x0000000000000156                relay_set_cooldown
                0x0000000000000168                relay_timer_inc
                0x00000000000001f4                relay_set_maxon
                0x0000000000000206                relay_get_cooldown
                0x0000000000000218                relay_get_maxon
                0x000000000000022a                relay_get_timer
                0x000000000000022c                relay_running
                0x000000000000024a                relay_clear_error
 .text          0x0000000000000250       0x6a relaytimer.o
                0x0000000000000250                timer_clear
                0x0000000000000262                timer_inc
                0x0000000000000296                timer_set
                0x00000000000002a8                timer_get
 .text          0x00000000000002ba       0x96 spislave.o
                0x00000000000002ba                spi_init
                0x00000000000002c8                spi_set_slave_read
                0x00000000000002d2                spi_set_slave_write
                0x00000000000002dc                __vector_14
 .text          0x0000000000000350       0x34 water.o
                0x0000000000000350                water_init
                0x000000000000035e                water_low
 .text          0x0000000000000384      0x116 cmd.o
                0x0000000000000384                cmd_slave_read
                0x000000000000047c                cmd_slave_write
 .text          0x000000000000049a        0x0 /usr/lib/gcc/avr/4.8.1/avr25/libgcc.a(_exit.o)
 .text          0x000000000000049a        0x0 /usr/lib/gcc/avr/4.8.1/avr25/libgcc.a(_clear_bss.o)
                0x000000000000049a                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x000000000000049a       0x46 relayboard.o
                0x000000000000049a                main
 .text.libgcc.mul
                0x00000000000004e0        0x0 /usr/lib/gcc/avr/4.8.1/avr25/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000000004e0        0x0 /usr/lib/gcc/avr/4.8.1/avr25/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000004e0        0x0 /usr/lib/gcc/avr/4.8.1/avr25/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000000004e0        0x0 /usr/lib/gcc/avr/4.8.1/avr25/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000000004e0        0x0 /usr/lib/gcc/avr/4.8.1/avr25/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000000004e0        0x0 /usr/lib/gcc/avr/4.8.1/avr25/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000000004e0        0x0 /usr/lib/gcc/avr/4.8.1/avr25/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000000004e0        0x0 /usr/lib/gcc/avr/4.8.1/avr25/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000000004e0        0x0 /usr/lib/gcc/avr/4.8.1/avr25/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000000004e0        0x0 /usr/lib/gcc/avr/4.8.1/avr25/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000000004e0        0x0 /usr/lib/gcc/avr/4.8.1/avr25/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000000004e0        0x0 /usr/lib/gcc/avr/4.8.1/avr25/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000000004e0        0x0 /usr/lib/gcc/avr/4.8.1/avr25/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x00000000000004e0        0x0 /usr/lib/gcc/avr/4.8.1/avr25/libgcc.a(_clear_bss.o)
                0x00000000000004e0                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000004e0        0x0 /usr/lib/gcc/avr/4.8.1/avr25/libgcc.a(_exit.o)
                0x00000000000004e0                exit
                0x00000000000004e0                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000004e0        0x4 /usr/lib/gcc/avr/4.8.1/avr25/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000004e4                _etext = .

.data           0x0000000000800060        0x0 load address 0x00000000000004e4
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/crttn45.o
 .data          0x0000000000800060        0x0 relayboard.o
 .data          0x0000000000800060        0x0 relay.o
 .data          0x0000000000800060        0x0 relaytimer.o
 .data          0x0000000000800060        0x0 spislave.o
 .data          0x0000000000800060        0x0 water.o
 .data          0x0000000000800060        0x0 cmd.o
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.1/avr25/libgcc.a(_exit.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.1/avr25/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800060                . = ALIGN (0x2)
                0x0000000000800060                _edata = .
                0x0000000000800060                PROVIDE (__data_end, .)

.bss            0x0000000000800060       0x1c
                0x0000000000800060                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.8.1/../../../avr/lib/avr25/crttn45.o
 .bss           0x0000000000800060        0x0 relayboard.o
 .bss           0x0000000000800060        0xc relay.o
 .bss           0x000000000080006c        0x4 relaytimer.o
 .bss           0x0000000000800070        0x4 spislave.o
 .bss           0x0000000000800074        0x3 water.o
 .bss           0x0000000000800077        0x5 cmd.o
 .bss           0x000000000080007c        0x0 /usr/lib/gcc/avr/4.8.1/avr25/libgcc.a(_exit.o)
 .bss           0x000000000080007c        0x0 /usr/lib/gcc/avr/4.8.1/avr25/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
                0x000000000080007c                PROVIDE (__bss_end, .)
                0x00000000000004e4                __data_load_start = LOADADDR (.data)
                0x00000000000004e4                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x000000000080007c        0x0
                0x000000000080007c                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x000000000080007c                PROVIDE (__noinit_end, .)
                0x000000000080007c                _end = .
                0x000000000080007c                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000     0x1f38
 *(.stab)
 .stab          0x0000000000000000      0x5dc relayboard.o
 .stab          0x00000000000005dc      0x780 relay.o
                                        0x90c (size before relaxing)
 .stab          0x0000000000000d5c      0x3e4 relaytimer.o
                                        0x558 (size before relaxing)
 .stab          0x0000000000001140      0x474 spislave.o
                                        0x63c (size before relaxing)
 .stab          0x00000000000015b4      0x36c water.o
                                        0x4e0 (size before relaxing)
 .stab          0x0000000000001920      0x618 cmd.o
                                        0x7bc (size before relaxing)

.stabstr        0x0000000000000000     0x1106
 *(.stabstr)
 .stabstr       0x0000000000000000     0x1106 relayboard.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 relayboard.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 relay.o
 .comment       0x0000000000000000       0x12 relaytimer.o
 .comment       0x0000000000000000       0x12 spislave.o
 .comment       0x0000000000000000       0x12 water.o
 .comment       0x0000000000000000       0x12 cmd.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(relayboard.elf elf32-avr)
LOAD linker stubs
